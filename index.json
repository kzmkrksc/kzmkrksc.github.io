[{"content":"Pretty-printing XML with JS With Javascript it is possible to prettify/beutify XML strings. Only thing is that XSLT should be properly formed and XML strings should be properly written.\nXSLT identity transform code is given below.\n\u0026lt;xsl:stylesheet version=\u0026#34;1.0\u0026#34; xmlns:xsl=\u0026#34;http://www.w3.org/1999/XSL/Transform\u0026#34;\u0026gt; \u0026lt;xsl:output omit-xml-declaration=\u0026#34;yes\u0026#34; indent=\u0026#34;yes\u0026#34;/\u0026gt; \u0026lt;!-- Identity Transform --\u0026gt; \u0026lt;xsl:template match=\u0026#34;node()|@*\u0026#34;\u0026gt; \u0026lt;xsl:copy\u0026gt; \u0026lt;xsl:apply-templates select=\u0026#34;node()|@*\u0026#34;/\u0026gt; \u0026lt;/xsl:copy\u0026gt; \u0026lt;/xsl:template\u0026gt; \u0026lt;!-- apply normalize-space to text nodes--\u0026gt; \u0026lt;xsl:template match=\u0026#34;text()\u0026#34;\u0026gt; \u0026lt;xsl:value-of select=\u0026#34;normalize-space(.)\u0026#34;/\u0026gt; \u0026lt;/xsl:template\u0026gt; \u0026lt;/xsl:stylesheet\u0026gt; Add XSLT transformation code inside a \u0026lt;script\u0026gt;\u0026lt;/script\u0026gt; tag and then read it inside JS. The XML string should be processed with this XSLT processor.\nJS Code:\nvar prettifyXml = function (source) { let xmlDoc = new DOMParser().parseFromString(source, \u0026#34;application/xml\u0026#34;); let err = xmlDoc.documentElement.getElementsByTagName(\u0026#34;parsererror\u0026#34;).length; if (!err) { let xsltText = document.getElementById(\u0026#34;xslt\u0026#34;).innerText; let xsltDoc = new DOMParser().parseFromString(xsltText, \u0026#34;text/xml\u0026#34;); let xsltProcessor = new XSLTProcessor(); xsltProcessor.importStylesheet(xsltDoc); let resultDoc = xsltProcessor.transformToDocument(xmlDoc); let resultXml = new XMLSerializer().serializeToString(resultDoc); return resultXml; } else { return false; } }; Live Codepen Demo\n","permalink":"https://kzmkrksc.github.io/post/prettify-xml-with-js/","summary":"Pretty-printing XML with JS With Javascript it is possible to prettify/beutify XML strings. Only thing is that XSLT should be properly formed and XML strings should be properly written.\nXSLT identity transform code is given below.\n\u0026lt;xsl:stylesheet version=\u0026#34;1.0\u0026#34; xmlns:xsl=\u0026#34;http://www.w3.org/1999/XSL/Transform\u0026#34;\u0026gt; \u0026lt;xsl:output omit-xml-declaration=\u0026#34;yes\u0026#34; indent=\u0026#34;yes\u0026#34;/\u0026gt; \u0026lt;!-- Identity Transform --\u0026gt; \u0026lt;xsl:template match=\u0026#34;node()|@*\u0026#34;\u0026gt; \u0026lt;xsl:copy\u0026gt; \u0026lt;xsl:apply-templates select=\u0026#34;node()|@*\u0026#34;/\u0026gt; \u0026lt;/xsl:copy\u0026gt; \u0026lt;/xsl:template\u0026gt; \u0026lt;!-- apply normalize-space to text nodes--\u0026gt; \u0026lt;xsl:template match=\u0026#34;text()\u0026#34;\u0026gt; \u0026lt;xsl:value-of select=\u0026#34;normalize-space(.)\u0026#34;/\u0026gt; \u0026lt;/xsl:template\u0026gt; \u0026lt;/xsl:stylesheet\u0026gt; Add XSLT transformation code inside a \u0026lt;script\u0026gt;\u0026lt;/script\u0026gt; tag and then read it inside JS.","title":"Pretty-printing XML with JS"},{"content":"This is a test post\n","permalink":"https://kzmkrksc.github.io/post/test/","summary":"This is a test post","title":"Test"}]