[{"content":"Bootstrap Login Page with Floating Labels Creating a login page might not seem challenging to many in the field. However, creating a lightweight, responsive and cross-platform page might be difficult at times.\nBootstrap is an amazing CSS framework and widely used in industry. Many of the login pages across the internet uses this CSS framework. You also might have seen floating labels on these forms across websites.\nHere I will share a simple pen that I have worked in my leisure times. This pen includes Bootstrap 3 only and no additional JS code is required. This form also have basic validations.\nLogin form with Floating labels - CSS only edition \u0026lt;div class=\u0026#34;container\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;row\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;col-md-6 col-md-offset-3\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;panel panel-login\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;panel-heading\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;panel-title text-center\u0026#34;\u0026gt;Login\u0026lt;/div\u0026gt; \u0026lt;hr\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;panel-body\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;row\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;col-lg-12\u0026#34;\u0026gt; \u0026lt;form id=\u0026#34;login-form\u0026#34; class=\u0026#34;col-lg-offset-1 col-lg-10\u0026#34; action=\u0026#34;\u0026#34; method=\u0026#34;post\u0026#34; role=\u0026#34;form\u0026#34; style=\u0026#34;display: block;\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;form-group input-group\u0026#34;\u0026gt; \u0026lt;span class=\u0026#34;input-group-addon\u0026#34;\u0026gt;\u0026lt;i class=\u0026#34;fa fa-user\u0026#34;\u0026gt;\u0026lt;/i\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;input type=\u0026#34;text\u0026#34; name=\u0026#34;username\u0026#34; id=\u0026#34;username\u0026#34; tabindex=\u0026#34;1\u0026#34; class=\u0026#34;form-control\u0026#34; required placeholder=\u0026#34; \u0026#34;\u0026gt; \u0026lt;label class=\u0026#34;form-control-placeholder\u0026#34; for=\u0026#34;username\u0026#34;\u0026gt;Username\u0026lt;/label\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;form-group input-group\u0026#34;\u0026gt; \u0026lt;span class=\u0026#34;input-group-addon\u0026#34;\u0026gt;\u0026lt;i class=\u0026#34;fa fa-lock\u0026#34;\u0026gt;\u0026lt;/i\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;input type=\u0026#34;password\u0026#34; name=\u0026#34;password\u0026#34; id=\u0026#34;password\u0026#34; tabindex=\u0026#34;2\u0026#34; class=\u0026#34;form-control\u0026#34; required placeholder=\u0026#34; \u0026#34;\u0026gt; \u0026lt;label class=\u0026#34;form-control-placeholder\u0026#34; for=\u0026#34;password\u0026#34;\u0026gt;Password\u0026lt;/label\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-sm-6 col-sm-offset-3\u0026#34;\u0026gt; \u0026lt;button type=\u0026#34;submit\u0026#34; name=\u0026#34;login-submit\u0026#34; id=\u0026#34;login-submit\u0026#34; tabindex=\u0026#34;3\u0026#34; class=\u0026#34;form-control btn btn-login\u0026#34; value=\u0026#34;LOGIN\u0026#34;\u0026gt;\u0026lt;i class=\u0026#34;fas fa-sign-in-alt\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; Login\u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; CSS Code:\n.container { padding-top: 90px; font-family: \u0026#34;Arial\u0026#34;, sans-serif; } .panel-title { font-size: 33px; color: #888888; } .panel-login { padding-bottom: 1em; background-color: #fafafa; -webkit-box-shadow: 0 1px 2px 0 rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15); box-shadow: 0 1px 2px 0 rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15); } .panel-login \u0026gt; .panel-heading hr { margin-top: 10px; margin-bottom: 0px; clear: both; border: 0; height: 1px; background-image: -webkit-linear-gradient( left, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.15), rgba(0, 0, 0, 0) ); background-image: -moz-linear-gradient( left, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.15), rgba(0, 0, 0, 0) ); background-image: -ms-linear-gradient( left, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.15), rgba(0, 0, 0, 0) ); background-image: -o-linear-gradient( left, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.15), rgba(0, 0, 0, 0) ); } .panel-login input[type=\u0026#34;text\u0026#34;], .panel-login input[type=\u0026#34;email\u0026#34;], .panel-login input[type=\u0026#34;password\u0026#34;] { height: 45px; border: 1px solid #ddd; font-size: 19px; -webkit-transition: all 0.1s ease; -moz-transition: all 0.1s ease; transition: all 0.1s ease; } .panel-login input:hover, .panel-login input:focus { outline: none; -webkit-box-shadow: none; -moz-box-shadow: none; box-shadow: none; border-color: #ccc; } .btn-login { background-color: #59b2e0; outline: none; font-size: 18px; height: auto; font-weight: normal; border-color: #ccc; } .input-group { margin-top: 35px; } #username:focus, #password:focus {\tborder-bottom: 2px solid #b1b1b1; padding-bottom: 3.5px; } #username, #password { border-radius: .25rem; display: block; box-sizing: border-box; -webkit-box-sizing: border-box; } #login-submit { color: #008080; background-color: #fff; margin-top: 25px; transition: all 0.1s ease; } #login-submit:hover { border-color: #66afe9; -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(102, 175, 233, 0.6); box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(102, 175, 233, 0.6); } .form-control-placeholder { pointer-events: none; cursor: text; position: absolute; top: 0; padding: 12px 0 0 13px; transition: all 200ms; opacity: 0.5; font-size:16px } .form-control-focused { font-size: 95%; transform: translate3d(0, -100%, 0); opacity: 1; } .panel-login input:focus ~ label, .panel-login input:not(:placeholder-shown) ~ label, .panel-login input:valid ~ label, .panel-login input:-webkit-autofill:focus ~ label { font-size: 95%; transform: translate3d(0, -100%, 0); opacity: 1; } Live Codepen Demo\nWhen clicked inside input boxes, the labels inside float on top of input fields. This behavior works fine in Chrome browsers. However this particular action might not work well in other browsers. It is required to use JS if you want a cross-platform solution.\nLogin form with Floating labels - JS Edition \u0026lt;div class=\u0026#34;container\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;row\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;col-md-6 col-md-offset-3\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;panel panel-login\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;panel-heading\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;panel-title text-center\u0026#34;\u0026gt;Login\u0026lt;/div\u0026gt; \u0026lt;hr\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;panel-body\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;row\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;col-lg-12\u0026#34;\u0026gt; \u0026lt;form id=\u0026#34;login-form\u0026#34; class=\u0026#34;col-lg-offset-1 col-lg-10\u0026#34; action=\u0026#34;\u0026#34; method=\u0026#34;post\u0026#34; role=\u0026#34;form\u0026#34; style=\u0026#34;display: block;\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;form-group input-group\u0026#34;\u0026gt; \u0026lt;span class=\u0026#34;input-group-addon\u0026#34;\u0026gt;\u0026lt;i class=\u0026#34;fa fa-user\u0026#34;\u0026gt;\u0026lt;/i\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;input type=\u0026#34;text\u0026#34; name=\u0026#34;username\u0026#34; id=\u0026#34;username\u0026#34; tabindex=\u0026#34;1\u0026#34; class=\u0026#34;form-control\u0026#34; required placeholder=\u0026#34; \u0026#34;\u0026gt; \u0026lt;label class=\u0026#34;form-control-placeholder\u0026#34; for=\u0026#34;username\u0026#34;\u0026gt;Username\u0026lt;/label\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;form-group input-group\u0026#34;\u0026gt; \u0026lt;span class=\u0026#34;input-group-addon\u0026#34;\u0026gt;\u0026lt;i class=\u0026#34;fa fa-lock\u0026#34;\u0026gt;\u0026lt;/i\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;input type=\u0026#34;password\u0026#34; name=\u0026#34;password\u0026#34; id=\u0026#34;password\u0026#34; tabindex=\u0026#34;2\u0026#34; class=\u0026#34;form-control\u0026#34; required placeholder=\u0026#34; \u0026#34;\u0026gt; \u0026lt;label class=\u0026#34;form-control-placeholder\u0026#34; for=\u0026#34;password\u0026#34;\u0026gt;Password\u0026lt;/label\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-sm-6 col-sm-offset-3\u0026#34;\u0026gt; \u0026lt;button type=\u0026#34;submit\u0026#34; name=\u0026#34;login-submit\u0026#34; id=\u0026#34;login-submit\u0026#34; tabindex=\u0026#34;3\u0026#34; class=\u0026#34;form-control btn btn-login\u0026#34; value=\u0026#34;LOGIN\u0026#34;\u0026gt;\u0026lt;i class=\u0026#34;fas fa-sign-in-alt\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; Login\u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; CSS:\n.container { padding-top: 90px; } .panel-title { font-size: 33px; color: #888888; } .panel-login { padding-bottom: 1em; background-color: #fafafa; -webkit-box-shadow: 0 1px 2px 0 rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15); box-shadow: 0 1px 2px 0 rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15); } .panel-login \u0026gt; .panel-heading hr { margin-top: 10px; margin-bottom: 0px; clear: both; border: 0; height: 1px; background-image: -webkit-linear-gradient( left, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.15), rgba(0, 0, 0, 0) ); background-image: -moz-linear-gradient( left, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.15), rgba(0, 0, 0, 0) ); } .input-group { margin-top: 35px; } .form-group input[type=\u0026#34;text\u0026#34;], .form-group input[type=\u0026#34;email\u0026#34;], .form-group input[type=\u0026#34;password\u0026#34;] { height: 45px; border: 1px solid #ddd; border-top-right-radius: 0.25rem; border-bottom-right-radius: 0.25rem; display: block; box-sizing: border-box; -webkit-box-sizing: border-box; font-size: 16px; -webkit-transition: all 0.1s ease; -moz-transition: all 0.1s ease; transition: all 0.1s ease; } .panel-login input:hover, .panel-login input:focus { outline: none; -webkit-box-shadow: none; -moz-box-shadow: none; box-shadow: none; border-color: #ccc; } .btn-login { outline: none; font-size: 18px; height: auto; font-weight: normal; border-color: #ccc; color: #008080; background-color: #fff; margin-top: 25px; transition: all 0.1s ease; } .btn-login:hover { border-color: #66afe9; -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(102, 175, 233, 0.6); box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(102, 175, 233, 0.6); } .form-control-placeholder { pointer-events: none; cursor: text; position: absolute; top: 0; padding: 12px 0 0 13px; -webkit-transition: all 0.2s; transition: all 0.2s; opacity: 0.5; font-size: 16px; font-weight: 400; } input:focus + label, input + label.label-animated { font-size: 95%; transform: translatey(-2.5em); opacity: 1; } input:-webkit-autofill + label { font-size: 95%; transform: translateY(-2.5em); opacity: 1; } input:not(:placeholder-shown) + label { font-size: 95%; transform: translateY(-2.5em); opacity: 1; } And finally JS:\n$(function () { $(\u0026#34;.form-group input\u0026#34;).on(\u0026#34;checkval\u0026#34;, function () { let label = $(this).next(\u0026#34;label\u0026#34;); if(this.value !== \u0026#34;\u0026#34;) { label.addClass(\u0026#34;label-animated\u0026#34;); } else { label.removeClass(\u0026#34;label-animated\u0026#34;); } }).on(\u0026#34;keyup\u0026#34;, function () { $(this).trigger(\u0026#34;checkval\u0026#34;); }) }); Live Codepen Demo\n","permalink":"https://kzmkrksc.github.io/post/bootstrap-login-page/","summary":"Bootstrap Login Page with Floating Labels Creating a login page might not seem challenging to many in the field. However, creating a lightweight, responsive and cross-platform page might be difficult at times.\nBootstrap is an amazing CSS framework and widely used in industry. Many of the login pages across the internet uses this CSS framework. You also might have seen floating labels on these forms across websites.\nHere I will share a simple pen that I have worked in my leisure times.","title":"Bootstrap Login Page with Floating Labels"},{"content":"Pretty-printing XML with JS With Javascript it is possible to prettify/beutify XML strings. Only thing is that XSLT should be properly formed and XML strings should be properly written.\nXSLT identity transform code is given below.\n\u0026lt;xsl:stylesheet version=\u0026#34;1.0\u0026#34; xmlns:xsl=\u0026#34;http://www.w3.org/1999/XSL/Transform\u0026#34;\u0026gt; \u0026lt;xsl:output omit-xml-declaration=\u0026#34;yes\u0026#34; indent=\u0026#34;yes\u0026#34;/\u0026gt; \u0026lt;!-- Identity Transform --\u0026gt; \u0026lt;xsl:template match=\u0026#34;node()|@*\u0026#34;\u0026gt; \u0026lt;xsl:copy\u0026gt; \u0026lt;xsl:apply-templates select=\u0026#34;node()|@*\u0026#34;/\u0026gt; \u0026lt;/xsl:copy\u0026gt; \u0026lt;/xsl:template\u0026gt; \u0026lt;!-- apply normalize-space to text nodes--\u0026gt; \u0026lt;xsl:template match=\u0026#34;text()\u0026#34;\u0026gt; \u0026lt;xsl:value-of select=\u0026#34;normalize-space(.)\u0026#34;/\u0026gt; \u0026lt;/xsl:template\u0026gt; \u0026lt;/xsl:stylesheet\u0026gt; Add XSLT transformation code inside a \u0026lt;script\u0026gt;\u0026lt;/script\u0026gt; tag and then read it inside JS. The XML string should be processed with this XSLT processor.\nJS Code:\nvar prettifyXml = function (source) { let xmlDoc = new DOMParser().parseFromString(source, \u0026#34;application/xml\u0026#34;); let err = xmlDoc.documentElement.getElementsByTagName(\u0026#34;parsererror\u0026#34;).length; if (!err) { let xsltText = document.getElementById(\u0026#34;xslt\u0026#34;).innerText; let xsltDoc = new DOMParser().parseFromString(xsltText, \u0026#34;text/xml\u0026#34;); let xsltProcessor = new XSLTProcessor(); xsltProcessor.importStylesheet(xsltDoc); let resultDoc = xsltProcessor.transformToDocument(xmlDoc); let resultXml = new XMLSerializer().serializeToString(resultDoc); return resultXml; } else { return false; } }; Live Codepen Demo\n","permalink":"https://kzmkrksc.github.io/post/prettify-xml-with-js/","summary":"Pretty-printing XML with JS With Javascript it is possible to prettify/beutify XML strings. Only thing is that XSLT should be properly formed and XML strings should be properly written.\nXSLT identity transform code is given below.\n\u0026lt;xsl:stylesheet version=\u0026#34;1.0\u0026#34; xmlns:xsl=\u0026#34;http://www.w3.org/1999/XSL/Transform\u0026#34;\u0026gt; \u0026lt;xsl:output omit-xml-declaration=\u0026#34;yes\u0026#34; indent=\u0026#34;yes\u0026#34;/\u0026gt; \u0026lt;!-- Identity Transform --\u0026gt; \u0026lt;xsl:template match=\u0026#34;node()|@*\u0026#34;\u0026gt; \u0026lt;xsl:copy\u0026gt; \u0026lt;xsl:apply-templates select=\u0026#34;node()|@*\u0026#34;/\u0026gt; \u0026lt;/xsl:copy\u0026gt; \u0026lt;/xsl:template\u0026gt; \u0026lt;!-- apply normalize-space to text nodes--\u0026gt; \u0026lt;xsl:template match=\u0026#34;text()\u0026#34;\u0026gt; \u0026lt;xsl:value-of select=\u0026#34;normalize-space(.)\u0026#34;/\u0026gt; \u0026lt;/xsl:template\u0026gt; \u0026lt;/xsl:stylesheet\u0026gt; Add XSLT transformation code inside a \u0026lt;script\u0026gt;\u0026lt;/script\u0026gt; tag and then read it inside JS.","title":"Pretty-printing XML with JS"}]